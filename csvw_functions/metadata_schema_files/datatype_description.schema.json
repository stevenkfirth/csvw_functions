{
    "$schema": "https://json-schema.org/draft/2020-12/schema" ,
    "$id": "https://github.com/stevenkfirth/csvw_metadata_json_schema/blob/main/schema_files/datatype_description.schema.json",
    "title": "Schema for csvw datatype description object",
    "description": "A dialect description provides hints to parsers about how to parse the file linked to from the url property in a table description.",
    "type": "object",
    "properties": {
        "base":{
            "description": "An atomic property that contains a single string: the name of one of the built-in datatypes, as listed above (and which are defined as terms in the default context).",
            "default": "string",
            "type":"string",
            "enum": ["anyAtomicType", "anyURI", "base64Binary", "boolean", "date", "dateTime", "dateTimeStamp", "decimal", "integer", "long", "int", "short", "byte", "nonNegativeInteger", "postiveInteger", "unsignedLong", "unsignedInt", "unsignedShort", "unsignedByte", "nonPositiveInteger", "negativeInteger", "double", "duration", "dayTimeDuration", "yearMonthDuration", "float", "gDay", "gMonth", "gYear", "gYearMonth", "hexBinary", "QName", "string", "normalizedString", "token", "language", "Name", "NMTOKEN", "xml", "html", "json", "time", "number", "binary", "datetime", "any"],
            "$comment": "atomic property"
        },
        "format":{
            "description": "An atomic property that contains either a single string or an object that defines the format of a value of this type, used when parsing a string value as described in Parsing Cells in [tabular-data-model].",
            "oneOf":[
                {"type":"string"},
                {"$ref": "https://github.com/stevenkfirth/csvw_metadata_json_schema/blob/main/schema_files/number_format.schema.json"}
                ],
            "$comment": "atomic property"
        },
        "length":{
            "description": "A numeric atomic property that contains a single integer that is the exact length of the value.",
            "type":"integer",
            "$comment": "atomic property"
        },
        "minLength":{
            "description": "An atomic property that contains a single integer that is the minimum length of the value.",
            "type":"integer",
            "$comment": "atomic property"
        },
        "maxLength":{
            "description": "A numeric atomic property that contains a single integer that is the maximum length of the value.",
            "type":"integer",
            "$comment": "atomic property"
        },
        "minimum":{
            "description": "An atomic property that contains a single number or string that is the minimum valid value (inclusive); equivalent to minInclusive.",
            "oneOf":[
                {"type":"number"},
                {"type":"string"}
                ],
            "$comment": "atomic property"
        },
        "maximum":{
            "description": "An atomic property that contains a single number or string that is the maximum valid value (inclusive); equivalent to maxInclusive.",
            "oneOf":[
                {"type":"number"},
                {"type":"string"}
                ],
            "$comment": "atomic property"
        },
        "minInclusive":{
            "description": "An atomic property that contains a single number or string that is the minimum valid value (inclusive).",
            "oneOf":[
                {"type":"number"},
                {"type":"string"}
                ],
            "$comment": "atomic property"
        },
        "maxInclusive":{
            "description": "An atomic property that contains a single number or string that is the maximum valid value (inclusive).",
            "oneOf":[
                {"type":"number"},
                {"type":"string"}
                ],
            "$comment": "atomic property"
        },
        "minExclusive":{
            "description": "An atomic property that contains a single number or string that is the minimum valid value (exclusive).",
            "oneOf":[
                {"type":"number"},
                {"type":"string"}
                ],
            "$comment": "atomic property"
        },
        "maxExclusive":{
            "description": "An atomic property that contains a single number or string that is the maximum valid value (exclusive).",
            "oneOf":[
                {"type":"number"},
                {"type":"string"}
                ],
            "$comment": "atomic property"
        },
        "@id":{
            "description": "If included, @id is a link property that identifies the datatype described by this datatype description. It must not start with _: and it must not be the URL of a built-in datatype.",
            "type": "string",
            "format": "uri-reference",
            "$comment": "link property"
        },
        "@type":{
            "description": "If included, @type is an atomic property that must be set to \"Datatype\".",
            "type":"string",
            "const":"Datatype",
            "$comment": "atomic property"
        }
    },
    "allOf": [
        {
            "$ref": "https://github.com/stevenkfirth/csvw_metadata_json_schema/blob/main/schema_files/top_level_properties.schema.json",
            "$comment": ""
        } 
    ]
}