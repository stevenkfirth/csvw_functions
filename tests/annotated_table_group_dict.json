{
    "id": null,
    "notes": false,
    "tables": [
        {
            "columns": [
                {
                    "table": "__recursion__",
                    "number": 1,
                    "sourceNumber": 1,
                    "name": "boolean",
                    "titles": [
                        {
                            "@value": "boolean",
                            "@language": "und"
                        }
                    ],
                    "virtual": false,
                    "suppressOutput": false,
                    "datatype": {
                        "base": "boolean"
                    },
                    "default": "",
                    "lang": "und",
                    "null": "",
                    "ordered": false,
                    "required": false,
                    "separator": null,
                    "textDirection": "auto",
                    "aboutURL": null,
                    "propertyURL": null,
                    "valueURL": null,
                    "cells": [
                        {
                            "table": "__recursion__",
                            "column": "__recursion__",
                            "row": "__recursion__",
                            "stringValue": "100",
                            "value": {
                                "@value": "100",
                                "@type": "http://www.w3.org/2001/XMLSchema#string"
                            },
                            "errors": [
                                "Boolean value \"100\" does not match either the true values \"['1', 'true']\" or false values \"['0', 'false']\". Boolean value is not converted to boolean, string value returned."
                            ],
                            "textDirection": "auto",
                            "ordered": false,
                            "aboutURL": null,
                            "propertyURL": null,
                            "valueURL": null
                        }
                    ]
                }
            ],
            "rows": [
                {
                    "table": "__recursion__",
                    "number": 1,
                    "sourceNumber": 2,
                    "primaryKey": "__recursion__",
                    "referencedRows": "__recursion__",
                    "cells": [
                        {
                            "table": "__recursion__",
                            "column": "__recursion__",
                            "row": "__recursion__",
                            "stringValue": "100",
                            "value": {
                                "@value": "100",
                                "@type": "http://www.w3.org/2001/XMLSchema#string"
                            },
                            "errors": [
                                "Boolean value \"100\" does not match either the true values \"['1', 'true']\" or false values \"['0', 'false']\". Boolean value is not converted to boolean, string value returned."
                            ],
                            "textDirection": "auto",
                            "ordered": false,
                            "aboutURL": null,
                            "propertyURL": null,
                            "valueURL": null
                        }
                    ],
                    "titles": []
                }
            ],
            "id": null,
            "url": "file:///C:/Users/cvskf/OneDrive - Loughborough University/_Git/stevenkfirth/csvw_functions/tests/_github_w3c_csvw_tests/test186.csv",
            "tableDirection": "auto",
            "suppressOutput": false,
            "notes": [],
            "foreignKeys": "__recursion__",
            "transformations": [],
            "rdfs:comment": {
                "@value": "Implementations MUST add a validation error to the errors annotation for the cell if the string being parsed."
            },
            "rdfs:label": {
                "@value": "boolean format (not matching datatype)"
            }
        }
    ]
}